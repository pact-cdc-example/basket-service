name: Build

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GH_ACCESS_TOKEN: ${{ secrets.GH_TOKEN }}
      PACTICIPANT: ${{ secrets.PACTICIPANT_NAME }}
      CONSUMER_VERSION: ${{ github.sha }}
      BROKER_URL: ${{ secrets.PACT_BROKER_BASE_URL }}
      BROKER_TOKEN: ${{ secrets.PACT_BROKER_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - name: Get branch name and save to env
        env:
          IS_PR: ${{ github.EVENT_NAME == 'pull_request' }}
        run: |
            if ${IS_PR}; then
              BRANCH_NAME="${GITHUB_HEAD_REF}"
            else
              BRANCH_NAME="${GITHUB_REF##*/}"
            fi
          
            if ${BRANCH_NAME}" == "master"; then
              ENV_NAME="production"
            else
              ENV_NAME="test"
            fi
            echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
            echo "ENV_NAME=${ENV_NAME}" >> $GITHUB_ENV

      - name: Branch name and environment
        run: echo ${{ env.BRANCH_NAME }} && echo ${{ env.ENV_NAME }}
#
#      - name: Set up Go
#        uses: actions/setup-go@v2
#        with:
#            go-version: 1.18
#
#      - name: Build
#        run: go build -v ./...
#
#      - name: Pact Install
#        run: sudo gem install pact && sudo gem install pact_broker-client
#
#      - name: Test Consumer
#        run: go clean -testcache && go test -tags=consumer ./app/... -v
#
#      - name: Pact Publish
#        run: pact-broker publish ./app/pacts --consumer-app-version=$CONSUMER_VERSION --broker-base-url=$BROKER_URL --broker-token=$BROKER_TOKEN
#
#      - name: Can I Deploy?
#        run: pact-broker can-i-deploy --pacticipant=$PACTICIPANT --version $CONSUMER_VERSION --to={} --broker-base-url=$BROKER_URL --broker-token=$BROKER_TOKEN -retry-while-unknown=12 --retry-interval=10 --limit 500
